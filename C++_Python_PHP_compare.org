* 连接字符串
  C++ 的 string 类型的字符串用 '+'，一般的字符串用 strcat().
  PHP 用 '.'，如 $total .= $line1 . $line2 . $line3 ;
  Python 用 '+' 或 ''.join() 或 '%s%s%s' % (one, two, three).
* 类
** 构造函数
   C++ 中用 类名，如对于 MyClass 类，可用
   class Myclass {
       Myclass();
       Myclass(参数);
   };
   C++ 中可定义多个构造函数。
   
   Python 中用 
   def __init__(self [, 其它传入参数]):
       函数体

   PHP 中用 
   function __construct() {
       函数体;
   }

** 析构函数
   C++ 中用如下形式
   class MyClass {
       ~MyClass();
   }
   每个类只能有一个析构函数。

   Python 中用
   def __del__():
       函数体
   在 Python 中一般不用析构函数，这与 Python 调用析构函数的机制有关，当指向某个
   对象的 reference count 为 0 时才调用析构函数(若存在系够函数时)。

   PHP 中用
   function __destruct() {
       函数体;
   }
** 对象访问类中的变量、方法
   在 C++ 中，若是类名，则用 '.'，若使用指针，则用 '->'.对结构体也适用。

   在 Python 中，是用 '.'。

   在 PHP 中，是用 '->'，而且访问类中变量时，变量名前不用加 '$' 符号。
** 对象访问父类的变量、方法
** 在方法中给类的变量赋值
   Python 要分两类，对于 Class Attribute，则可直接在方法中给类的变量赋值，不论是
   否已经定义了该属性，用这种方法定义的都是 Class Attribute.对于 Instance
   Attribute，则需要使用 self 关键字，用 self.var 形式，这样表示它是对象的属性。
   对于这其中的区别，可从命名空间的角度来思考。

   PHP 中，要使用 $this 关键字，用 $this->var 的形式。
** 静态变量和方法
   C++ 静态变量和静态方法都是通过加修饰符 static 来实现。访问静态变量和静态方法
   时都是通过 "类名::静态变量或静态方法" 。
   
   在 Python 中，这个概念是通过命名空间来实现的。在类中定义的变量是静态变量，属
   于类的属性。而在类中限定有 self 的变量属于对象的属性，不是静态变量。可动态扩
   展非静态属性。没有静态方法这个概念。访问方法都是通过对象来访问。
   访问静态变量时通过 "类名.静态变量名" 的方法，访问对象属性时通过 "对象名.属性
   名".

   在 PHP 中，静态变量是通过加修饰符 static 来实现。也可在类中用 const 定义一个
   常量，然后可直接通过类名来访问。
   访问静态变量和静态方法时，都是通过 "类名::静态变量或静态方法"。
** 多重继承
* 函数的定义
  C++ 用如下形式:
  返回值类型 函数名(参数)
  {
      函数体;
  }

  Python 中用如下形式:
  def 函数名(参数):
      函数体

  PHP 中用如下形式:
  function 函数名(参数) {
      函数体;
  }
* 变量定义
  C++ 中是用如下形式:
  变量类型 变量名;

  Python 中是动态决定类型，通过给变量赋值，由解释器决定其类型。

  PHP 和 Python 一样，只是在变量前要加上 '$' 符号。

* 单引号/双引号
  C++ 中,单引号包含的表示是一个字符,双引号包含的是一个字符串.

  Python 中单双引号的作用一样,还有三引号的用法,可用来包含多行的字符串.

  PHP 中,单引号和双引号可互相替代,但不同之处在于,双引号内的特殊符号不会被转义.如
  下:
  $word = "flyer";   # also $word = 'flyer'
  echo "$word";      # output: flyer
  echo '$word';      # output: $word
* 语句结束判断
  C++ 是通过 ';' 来判断一条语句的结束.
  
  Python 在语句结束的结尾不必加 ';',一条语句占一行.若在语句后加 ';', 则可在同一
  行中使用多条语句.

  PHP 是通过 ';' 来判断一条语句的结束. 
