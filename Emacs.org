* Emacs
** 1、不重启更新emacs设置
   在 .emacs 中， C-x C-e 执行光标前面的一条语句
   还可 M-x load-file ~/.emacs
   M-x eval-buffer
** 2、不能使用 fcitx
   可能是系统字体环境的设置问题，可把 /etc/X11/xorg.conf-vesa 中多余的字体
   路径注释掉。
** 3、org-mode 使用技巧
   字体加粗 *bold*
   斜字体 /italics/
   加下划线 _underline_
** 4、编程相关
*** 1、编译程序
   先 M-x compile 
   在出现的提示中输入编译命令，然后会出现一个 *compilation* buffer。
   编译的结果会在这个 buffer 中显示，若有错误，可在这个 buffer 中通过
   C-x `
   来顺序定位错误。若想回到第一个提示的错误，可通过
   C-u C-x `
   也可在 *compilation* buffer 中通过 M-n 或 M-p 上下移动选择错误的信
   息，然后通过 C-c C-c 来在源码中定位错误。
*** 2、调试程序
   先按 M-x ，然后输入 gdb ，接着输入要调试的程序，打开后再按 M-x，输
   入 gdb-many-windows，此时会出现很棒的调试界面，共有5个 buffer：gdb
   调试 buffer、变量显示 buffer、源代码 buffer、栈 buffer、断点 buffer。
   每次设置断点或运行时会看到各种相关信息的显示，很有用处.
   可通过在 ~/.emacs 中添加如下语句，使得每次使用 gdb 调试时自动进入
   gdb-many-windows 模式：
   (setq gdb-many-windows t)
*** 3、添加注释
    可通过
    M-;
    来添加 /**/ 类型的注释，且会自动调整注释出现的位置。
    若想添加多行注释，可在注释内按
    M-j
    若想去除注释，先把光标移至注释开头所在行，然后输入
    M-x kill-comment
*** 4、函数标签
    先要在 shell 中执行 etags 命令，假如搜索当前目录下所有 .c 程序中的
    函数，则执行
    $ etags *.c
    此时会生成 TAGS 文件，然后在 Emacs 中执行
    M-x visit-tags-table
    确定一个 TAGS 后，就可搜索函数标签了。如，可通过如下命令来搜索特定
    的函数
    M-.
    然后输入函数名，若有多个文件中有相同的函数名，可通过
    M-,
    来继续查找。也可通过如下命令利用正则表达式来搜索某个函数
    M-x tags-search
    P.S：这种操作要多了解下，很有用。
*** 5、字体高亮
    可通过
    M-x font-lock-mode 
    来打开或关闭字体语法高亮，也可在 ~/.emacs 中添加
    (global-font-lock-mode t)
    来永久打开这种模式。
    可通过
    M-x list-faces-display
    来查看 Emacs 提供的各种界面，然后可通过
    M-x modify-face 或 M-x customize-face
    来选择。
*** 6、c-mode 
    M-a : 移动到句子开头
    M-e : 移动到句子结尾
    M-q : 若注释是分段的，则集合到一块儿
    C-M-a : 移动到函数开头
    C-M-e : 移动到函数结尾
    C-M-h : 标记所在函数整体
    C-c C-q : 根据缩进格式缩进整个函数
    C-c C-u : 转到目前预定义条件开头
    C-c C-p : 转到前一个预定义条件
    C-c C-n : 转到下一个预定义条件
** 5、kill 命令
   可通过 M-x kill- 然后 TAB 补全看看可能的命令，我觉得一个比较有用的
   是
   M-x kill-buffer 
   可以结束一个 buffer，然后通过 C-x 0 来关闭。
** 6、执行 shell 命令
   可通过三种方法：
   M-x shell
   M-x eshell
   M-!
   其中前两种方法都是在 Emacs 中打开一个 shell，第三种方法是一次只执行
   一条 shell 命令。
** 7、终止命令
   C-g

** 8、添加 man 帮助
   可通过 M-x man 来调用 man 帮助。也可在 ~/.emacs 中添加一个快捷键，
   如
   (global-set-key [(f8)] 'man)
** 9、搜索帮助
   C-h i
   这个很有用，各种帮助信息.
** 10、显示 C 函数原型
   可用 c-eldoc.el ，只能用于 C 函数，显示函数原型的首要条件
   是 #include 中包含这个函数，每次都会在 minibuffer 中自动显示。
** 11、Tab 补全获得帮助
   可以经常在 M-x 输入命令时通过 Tab 补全查看下可用的命令，这个很有帮
   助。

** 12、cedet 
*** 1、简介
    The Cedet package is a collection of serveral libraries,
    implementing differen commands, but used for one task —— provide
    functionality for work with source code written in different
    programming languages:
    1) /Semantic/ is base for construction of syntactic analyzers for
       different programming languages. This allows to provide common
       representation for information extracted from code, written in
       different languages. Using this information, Cedet & other
       packages (*JDEE* and *ECB*), can implement commands, required
       for modern development envirionment (something like Ecliplse,
       NetBeans, etc)
     2)/SemanticDB/ is included into Semantic, and implements
       interfaces to different storage modules, that keeps
       information, needed for names completion, source code
       navigation, and so on. Syntactic information could be saved
       between Emacs sessions, so it reduce need for re-parsing of not
       modified souce code.
     3)/Senator/ implements navigation in source code file, using
       information, extracted by Semantic.
     4)/Srecode/——package for source code generation, using syntactic
       information, including information, obtained from Semantic.
     5) /EDE/ implements set of extensions to work with projects ——
        user can control list of targets to build, perform build of
        project, etc. Besides this, using notion of the project, you
        can have more precise control about Semantic's opertions ——
        name completions, and so on.
     6) /Speedbar/ is used to display information about current buffer
        using different sources of information —— Semantic, some
        Specialized information providers (for texinof & html, for
        example), etc.
     7) /Eieio/ is a library, implementating CLOD-like (Common Lisp
        Object System) infrastructure for Emacs Lisp.
     8) /Cogre/ is a library for drawing of UML-like diagrams in Emacs
        buffer, with basic integration with Semantic.
*** 2、安装
   先从 SourceForge 上下载源码（CVS 版本），解压后通过
   $ emacs -Q -l cedet-build.el -f cedet-build
   或
   $ Emacs -Q -nw -l cedet-build.el -f cedet-build -f save-buffers-kill-terminal
*** 3、各 feature 介绍
*** 4、技巧
**** 1、跳转到函数定义
     把光标移动某个函数开头字符，然后执行
     M-x semantic-ia-fast-jump
     这就会自动跳转到函数的定义处，若想返回，则执行
     C-x B
** 13、ecb
   启动时用 M-x ecb-activate 或 M-x ecb-minor-mode 或 M-x
   ecb-byte-compile 或 M-x ecb-show-help
   很有帮助.
** 14、显示当前所有 buffer
   C-x C-b
   若想关闭某个 buffer，则通过 M-x kill-buffer 然后在出现的提示中，输
   入如下格式的 buffer 名
   *buffer_name*
** 15、放大、缩小字体
   放大字体:C-x C-+ 或 C-x C-=
   缩小字体:C-x C--
   重置字体:C-x C-0
   若要连续放大或缩小字体，第二次直接按 +、-、0 即可。
** 16、中文输入法
   可用 Emacs 自动的中文输入法，通过 C-x RET C-\ SPC 来选择，可直接通
   过 C-\ 来调用。
   也可用eim 输入法，具体配置参见 Google 搜索。
