* 异步方法调用
  异步方法调用或异步方法模式是(多线程)面向对象程序设计中用于异步调用对象的潜在的
  长期运行方法的一种设计模式。 它等价于 Allan Vermeulen 提出的 IOU 模式。 基于事
  件的异步模式是异步方法调用的一个变种，开销更大但能更好的表现软件组件对象。.NET
  框架和 Java 中的 java.util.concurrent.FutureTask 类中使用的基于事件的异步模式
  使用事件来解决同样的问题。

  大部分编程语言中对方法的调用是同步执行的。例如在线程执行体内，即线程的调用函数
  中，方法的调用就是同步执行的。如果方法需要很长的时间来完成，比方说从 Internet
  加载数据的方法，调用者线程将被阻塞直到方法调用完成。如果不希望调用被阻塞，则可
  以通过创建新的 worker 线程并在 worker 线程中调用方法，在大多数编程环中上这样做
  可能需要很长的一段代码，尤其是需要小心处理线程过多的额外开销。异步方法调用它通
  过使用一种立即返回的异步的变体并提供额外的方法来支持接受完成通知以及完成等待改
  进长期运行的(同步)方法。

  活动对象(active object) 设计模式通常使用异步方法调用。异步方法调用的一个替代方
  案是同步的方法调用和未来对象(future object) 模式。在 Web 浏览器的实现上可以采
  用异步方法调用，例如浏览器需要在 Web 页面中的图像加载完成之前将页面显示出来。

  在 PHP 中，异步建立和使用 socket 的方法是 stream_socket_client()、
  stream_select().
