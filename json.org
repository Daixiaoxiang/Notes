* 简介
  JSON: JavaScript Object Notation, JavaScript 对象表示法。
  JSON 是存储和交换文本信息的语法，类似 XML。
  JSON 比 XML 更小、更快、更易解析。
  JSON 是轻量级的文本数据交换格式。
  JSON 独立于语言，虽然使用 JavaScript 语法来描述数据对象，但 JSON 仍独立于语言
  和平台，JSON 解析器和 JSON 库支持许多不同的编程语言。
* JSON 语法
** 语法规则
   JSON 语法是 JavaScript 对象表示法语法的子集。
   1)数据在 名称/值 对中。
   2)数据由逗号分隔。
   3)花括号保存对象。
   4)方括号保存数组。
** JSON 名称/值 对
   JSON 数据的书写格式是: 名称/值 对. 如 
   "firstname": "John"
** JSON 值
   JSON 值可以是:
   1)数字(整数或浮点数)
   2)字符串(在双引号中)
   3)逻辑值(true 或 false)
   4)数组(在方括号中)
   5)对象(在花括号中)
   6)null

** JSON 对象
   JSON 对象在花括号中书写，如:
   {"firstname":"John", "lastname":"Doe"}
** JSON 数组
   JSON 数组在方括号中书写，数组可包含多个对象.如:
   {
   "employee": [
   {"firstname":"John", "lastname":"Doe"},
   {"firstname":"Anna", "lastname":"Smith"},
   {"firstname":"Peter", "lastname":"Jones"}
   ]
   }
** JSON 使用 JavaScript 语法
   因为 JSON 使用 JavaScript 语法，故无需额外的软件就能处理 JavaScript 中的
   JSON.
** JSON 文件
   JSON 文件的文件类型是 ".json";
   JSON 文本的 MIME 类型是 "application/json".

** JSON 使用
   JSON 最常见的用法之一，是从 web 服务器上读取 JSON 数据(作为文件或作为
   HttpRequest), 将 JSON 数据转换为 JavaScript 对象，然后在网页中使用该数据。
   eval() 函数使用的是 JavaScript 编辑器，可解析 JSON 文本，然后生成 JavaScript
   对象。必须把文本包围在括号中，这样才能避免语法错误.
   如下例子:

   <html>
   <body>
   <h2>通过 JSON 字符串来创建对象</h3>
   <p>
   First Name: <span id="fname"></span><br /> 
   Last Name: <span id="lname"></span><br /> 
   </p> 
   <script type="text/javascript">
   var txt = '{"employees":[' +
   '{"firstName":"Bill","lastName":"Gates" },' +
   '{"firstName":"George","lastName":"Bush" },' +
   '{"firstName":"Thomas","lastName":"Carter" }]}';

   var obj = eval ("(" + txt + ")");

   document.getElementById("fname").innerHTML=obj.employees[1].firstName 
   document.getElementById("lname").innerHTML=obj.employees[1].lastName 
   </script>
   </body>
   </html>
