* 操作说明
  以下有些命令若与操作系统相关，均以 Arch Linux 为例.
* 参考文档
  https://wiki.archlinux.org/index.php/Postgresql
* 安装好 postgresql 后的一些配置
** 环境
   # mkdir /var/lib/postgres/data/
   # chown -c -R postgres:postgres /var/lib/postgres
   # sudo su - postgres -c "initdb --locale en_US.UTf-8 -E UTF8 -D 
     '/var/lib/postgres/data/'"
	 
   启动 postgresql 进程 (Arch 下):
   # systemctl start postgresql
   Arch 下设置该守护进程随机启动:
   # systemctl enable postgresql
** 修改 postgresql 默认的密码
   Postgresql 默认会创建一个 'postgres' 的数据库用户作为数据库管理员，密码随机，
   若不改密码，每次登录时可使用任何密码.
   
   修改登录密码:
   $ sudo -u postgres psql
   postgres=# ALTER USER postgres WITH PASSWORD '设定的密码';

   修改 linux 中 postgres 用户密码:
   $ sudo passwd -d postgres
   $ sudo -u postgres passwd (设置和前面相同的密码)
** 建立用户
   $ psql -U postgres -h 127.0.0.1
   postgres=# CREATE USER "用户名" WITH PASSWORD '密码' nocreatedb;
   postgers=# CREATE DATABASE "数据库名" WITH OWNER="用户";
** 文件配置
   + 允许远程访问
	 修改 /var/lib/postgres/data/postgresql.conf
	 把 'listen_addresses' 那行改为:

	 listen_addresses = '*'
* 创建一个 '特殊用户'
  创建一个这样的用户，可以在不使用 'postgresql' 用户的前提下使用设置的用户访问
  postgresql.
  $ createuser -s -U postgres --interactive
  然后输入一个自己使用的用户.
  
  *Note:*
  以下若无特殊说明，均以设置的该 '特殊用户' 为例.
* 创建数据库
  $ createdb 数据库名
* 连接数据库
  $ psql -d 数据库名
* psql 有用的命令
  帮助信息:    \help
  连接到某个数据库:    \c 数据库名
  显示用户及其权限:    \du
  显示表信息:    \dt
  退出 psql 命令行:    \q 或 C-d
  查看系统中现存的数据库:    \l
  查看表结构:    \d
  查看索引:    \di
  查看某个表状况:    \d 表名
  重命名一个表:    ALTER TABLE 原表名 RENAME TO 新表名;
  删除一个表:    DROP TABLE 表名;
  删除数据库:    drop database 数据库名;
  创建数据库:    CREATE DATABASE 数据库名 [with owner=用户名];
  创建用户:    create user 用户名;
  删除已有用户:    drop user 用户名;
  显示当前时区: show timezone;
  设置时区: set timezone='时区'; 
  显示所有变量信息: show all; 
* postgresql 日志
  在 /var/log/postgresql.log 中
* 可视化管理工具
  + pgadmin3
  + [[http://www.adminer.org/][adminer]]
* BSET PRACTICE
** 小事务运行慢时关闭 synchronous_commit
   修改 /var/lib/postgres/data/postgresql.conf:
   synchronous_commit = off
** 禁止空闲时写磁盘
   修改 /var/lib/postgres/data/postgresql.conf:
   stats_temp_directory = '/run/postgresql'
** 时间设置
   时间采用 'timestamp with time zone'，除非是为了根据 timestamp 来分区数据 (此
   时使用 'timestamp without time zone').
* mac
** 启动 postgres
   $ launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
   或 
   $ postgres -D /usr/local/var/postgres
** brew 安装后 postgres 的配置文件位置
   一般在 /usr/local/var/postgres/ 中.
* FAQ
** psql: FATAL: database “<user>” does not exist
   先通过如下命令创建数据库:
   $ createdb
   
   然后再登陆:
   $ psql
   
   Ref:
   + [[http://stackoverflow.com/questions/17633422/psql-fatal-database-user-does-not-exist][psql: FATAL: database “<user>” does not exist]]
** 修改密码后无效
   修改 /PATH/TO/POSTGRE/pg_hba.conf 文件，把类似下面的:

   local   all             all              trust
   
   改为:

   local   all             all              md5
** 'timestamp with time zone' 和 'timestamp without time zone'
   最佳实践是使用 'timestamp with time zone'，这样取数据时会根据指定的 time
   zone 显示时间，否则显示的时间数据会被认为是 UTC 时间. 

   使用 'timestamp without time zone' 的情况是: partitioning.
   When partitioning data on timestamps, you must not
   use *timestamptz*. Because almost no expression involving *timestamptz*
   comparison is immutable. Use one in a *WHERE* clause, and
   constraint_exclusion may well be ignored and all partitions scanned.

   注意理解 'absolute timestamp' 和 'relative timestamp':
   + 'absolute timestamp' 指的是 UTC(0) 时间 (UTC 是 UTC-0 的简写)
   + 'relative timestamp' 指的是当地时间 

   区别:
   + 以当地时间存储数据到 'timestamp with time zone' 类型的字段时，postgres 底层
     会以 UTC 时间存储，展示时会根据 postgres 设置的 timezone 展示为当地时间.
   + 以当地时间存储数据到 'timestamp without time zone' 类型的字段时，postgres
     底层以输入的数据进行存储，展示时会原样展示，与 postgres 设置的时区无关.

   若表 timestamp_with_timezone 中有个字段是 now (timestamp with time zone 类型)
   ，如下方式查看时的不同结果:

   # 会以 postgres 设置的 timezone 显示数据
   select 
     now 
   from 
     timestamp_with_timezone

   # 会根据指定的 timezone 显示数据
   select 
     now at time zone '时区'
   from
     timestamp_with_timezone

   参考:
   + [[http://stackoverflow.com/questions/5876218/difference-between-timestamps-with-without-time-zone-in-postgresql][Difference between timestamps with/without time zone in PostgreSQL]]
   + [[http://justatheory.com/computers/databases/postgresql/use-timestamptz.html][Always Use TIMESTAMP WITH TIME ZONE]]
   + [[http://www.postgresql.org/docs/9.4/static/ddl-partitioning.html#DDL-PARTITIONING-CONSTRAINT-EXCLUSION][Partitioning and Constraint Exclusion]]
   + [[http://comments.gmane.org/gmane.comp.db.postgresql.performance/29681][Constraint exclusion can't process simple constant expressions?]]
   + [[http://stackoverflow.com/questions/6151084/which-timestamp-type-to-choose-in-a-postgresql-database][which timestamp type to choose in a postgresql database?]]
   + [[http://www.postgresql.org/docs/9.4/static/datatype-datetime.html][postgresql9.4 doc Date/Time Types]]
   + [[http://www.worldtimezone.com/index_cn.php][世界时区]]
   + [[http://en.wikipedia.org/wiki/Coordinated_Universal_Time][wiki UTC]]
** 显示 postgres 版本
   可在 postgres 中执行:
   select version();
   或
   show server_version;

   参考:
   + [[http://stackoverflow.com/questions/13733719/how-can-i-find-out-which-version-of-postgresql-im-running][How can I find out which version of PostgreSQL I'm running?]]
