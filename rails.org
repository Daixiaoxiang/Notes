* controller && action
  A controller's purpose is to receive specific requests for the
  application. 
  *Routing* decides which controller receives which requests. Often, there is
  more than one route to each controller, and different routes can be served by
  different *actions*.
  Each action's purpose is to collect information to provide it to a view.
  A view's purpose is to display this information in a human readable format. An
  important distinction to make is that it is the *controller*, not the view,
  where information is collected. The view should just display that
  information.

  There are *public*, *private* and *protected* methods in Ruby, but only
  *public* methods can be actions for controllers.
* resource
  A resource is the term used for a collection of similar objects, such as
  articles, people or animals. 
  You can create, read, update and destroy items for a resource and these
  operations are referred to ad CRUD operations.

  基本的 action:
  + READ
	- 对应 HTTP 的 GET 动作.
	- action 包括:
      - index
	    展示该 resource 中所有的元素.
	  - show
	    展示该 resource 中单个元素. 
  + CREATE
	- 对应 HTTP 的 GET/POST 动作.
    - action 包括:
	  - new
	    提供新建元素的页面.
	  - create
	    底层新建元素.
  + UPDATE
	- 对应 HTTP 的 GET/PUT/PATCH 动作.
    - action 包括:
	  - edit
	    提供更新某个元素的页面. 
	  - update
	    底层更新某个元素. 
  + DELETE
	- 对应 HTTP 的 DELETE 动作.
    - action 包括:
	  - delete
	    底层删除某个元素. 
* view
  每个 controller 在 app/views/ 目录下有个以 Controller 小写名称命名的文件夹,对
  于 http get 方法对应的 action,可对应一个以 action 命名的模板.
  在 controller#action 中不用显式指定 template 名称，rails 会自动在
  app/views/CONTROLLER/ 中查找对应的 template.

  Rails will pass all instances variables to the view.

  "<%= %>" 中可以调用 helper 方法.
  "<% %>" 中可以访问从 action 中传递的变量. 
* models
  Models in Rails use a singular name, and their corresponding database tables
  use a plural name.

  *Migrations* are Ruby classes that are designed to make it simple to create
   and modify database tables. Rails uses *rake* commands to run migrations, and
   it's possible to undo a migration after it's been applied to your
   database. Migration filenames include a timestamp to ensure that they're
   processed in the order that they were created.
* 理解
** RESTFul
   + 在 routing 中描述 'http 动作'、url 及相应的 controller/action
   + 在 controller 中实现 action, 不描述相应的 http 动作
** db
   rails 把 "应用层的 model" 和 "db 底层的 migration" 分开，分别在放 app/modles/
   和 db/migrate/ 中.
   "migration" 是作为连接 "抽象的 model" 和 "物理层的 db" 的桥梁.
* 常用命令:
  创建新项目:
  $ rails new 项目名

  运行 server:
  $ rails server

  查看当前所有的 routing 信息:
  $ rake routes

  创建 controller:
  $ rails generate controller CONTROLLER名称 [ACTION 名称]
